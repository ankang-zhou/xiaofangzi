<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bdqn.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="cn.bdqn.domain.Article" >
    <id column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="article_time" property="articleTime" jdbcType="TIMESTAMP" />
    <result column="article_pageview" property="articlePageview" jdbcType="INTEGER" />
    <result column="article_like" property="articleLike" jdbcType="INTEGER" />
    <result column="article_state" property="articleState" jdbcType="INTEGER" />
    <result column="article_photo" property="articlePhoto" jdbcType="VARCHAR" />
    <result column="music_id" property="musicId" jdbcType="INTEGER" />
    <result column="theme_id" property="themeId" jdbcType="INTEGER" />
    <result column="article_summary" property="articleSummary" jdbcType="VARCHAR"/>
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.bdqn.domain.Article" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    article_id, article_title, type_id, user_id, admin_id, article_time, article_pageview,
    article_like, article_state, article_photo, music_id, theme_id
  </sql>
  <sql id="Blob_Column_List" >
    article_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.bdqn.domain.Article" >
    insert into t_article (article_id, article_title, type_id,
      user_id, admin_id, article_time,
      article_pageview, article_like, article_state,
      article_photo, music_id, theme_id,
      article_content)
    values (#{articleId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, #{articleTime,jdbcType=TIMESTAMP},
      #{articlePageview,jdbcType=INTEGER}, #{articleLike,jdbcType=INTEGER}, #{articleState,jdbcType=INTEGER},
      #{articlePhoto,jdbcType=VARCHAR}, #{musicId,jdbcType=INTEGER}, #{themeId,jdbcType=INTEGER},
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <!-- 添加文章 -->
  <insert id="insertSelective" parameterType="cn.bdqn.domain.Article" >
    insert into t_article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="articleTime != null" >
        article_time,
      </if>
      <if test="articlePageview != null" >
        article_pageview,
      </if>
      <if test="articleLike != null" >
        article_like,
      </if>
      <if test="articleState != null" >
        article_state,
      </if>
      <if test="articlePhoto != null" >
        article_photo,
      </if>
      <if test="musicId != null" >
        music_id,
      </if>
      <if test="themeId != null" >
        theme_id,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
      <if test="articleSummary != null">
        article_summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="articleTime != null" >
        #{articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articlePageview != null" >
        #{articlePageview,jdbcType=INTEGER},
      </if>
      <if test="articleLike != null" >
        #{articleLike,jdbcType=INTEGER},
      </if>
      <if test="articleState != null" >
        #{articleState,jdbcType=INTEGER},
      </if>
      <if test="articlePhoto != null" >
        #{articlePhoto,jdbcType=VARCHAR},
      </if>
      <if test="musicId != null" >
        #{musicId,jdbcType=INTEGER},
      </if>
      <if test="themeId != null" >
        #{themeId,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleSummary != null">
        #{articleSummary,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.domain.Article" >
    update t_article
    <set >
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="articleTime != null" >
        article_time = #{articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articlePageview != null" >
        article_pageview = #{articlePageview,jdbcType=INTEGER},
      </if>
      <if test="articleLike != null" >
        article_like = #{articleLike,jdbcType=INTEGER},
      </if>
      <if test="articleState != null" >
        article_state = #{articleState,jdbcType=INTEGER},
      </if>
      <if test="articlePhoto != null" >
        article_photo = #{articlePhoto,jdbcType=VARCHAR},
      </if>
      <if test="musicId != null" >
        music_id = #{musicId,jdbcType=INTEGER},
      </if>
      <if test="themeId != null" >
        theme_id = #{themeId,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bdqn.domain.Article" >
    update t_article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      article_time = #{articleTime,jdbcType=TIMESTAMP},
      article_pageview = #{articlePageview,jdbcType=INTEGER},
      article_like = #{articleLike,jdbcType=INTEGER},
      article_state = #{articleState,jdbcType=INTEGER},
      article_photo = #{articlePhoto,jdbcType=VARCHAR},
      music_id = #{musicId,jdbcType=INTEGER},
      theme_id = #{themeId,jdbcType=INTEGER},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.domain.Article" >
    update t_article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      article_time = #{articleTime,jdbcType=TIMESTAMP},
      article_pageview = #{articlePageview,jdbcType=INTEGER},
      article_like = #{articleLike,jdbcType=INTEGER},
      article_state = #{articleState,jdbcType=INTEGER},
      article_photo = #{articlePhoto,jdbcType=VARCHAR},
      music_id = #{musicId,jdbcType=INTEGER},
      theme_id = #{themeId,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>


  <resultMap id="queryUserName" type="cn.bdqn.domain.Article">
    <id column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="article_time" property="articleTime" jdbcType="TIMESTAMP" />
    <result column="article_pageview" property="articlePageview" jdbcType="INTEGER" />
    <result column="article_like" property="articleLike" jdbcType="INTEGER" />
    <result column="article_state" property="articleState" jdbcType="INTEGER" />
    <result column="article_photo" property="articlePhoto" jdbcType="VARCHAR" />
    <result column="music_id" property="musicId" jdbcType="INTEGER" />
    <result column="theme_id" property="themeId" jdbcType="INTEGER" />
    <result column="article_summary" property="articleSummary" jdbcType="VARCHAR"/>
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
    <result column="user_nickName" property="userNickName"/>
    <result column="type_name" property="typeName"/>
    <result column="user_head" property="userHead"/>
  </resultMap>

  <!-- 获得最大的文章编号 -->
  <select id="getMaxArticleId" resultType="java.lang.Integer">
    SELECT article_id
    FROM t_article
    ORDER BY article_id DESC
    LIMIT 1
  </select>

    <!-- 根据文章Id查询文章内容 -->
    <select id="selectArticleById" resultMap="queryUserName">
        SELECT article_id,article_title,article_state,article_photo, t.`type_name`, u.`user_nickName`,article_time, article_pageview,
                article_like,article_summary,article_content
        FROM t_article AS a,t_user AS u,t_type AS t
        WHERE article_id = #{articleId} AND a.`user_id`=u.`user_id` AND a.`type_id`=t.`type_id` AND a.`article_state` = 1
    </select>

  <!-- 根据标题模糊查询博客头内容 -->
  <select id="selectArticlesByTitle" resultMap="queryUserName">
        SELECT article_id,article_title, t.`type_name`,article_photo, u.`user_nickName`,article_time, article_pageview,
                article_like,article_summary
        FROM t_article AS a,t_user AS u,t_type AS t
        WHERE article_title LIKE concat('%',#{articleTitle},'%') AND a.`user_id`=u.`user_id` AND a.`type_id`=t.`type_id` AND a.`article_state` = 1
    </select>

  <!-- 根据用户id查询文章内容 -->
  <select id="selectArticleByUserId" resultMap="BaseResultMap">
    select
    article_id,article_title,article_state,article_photo,article_time, article_pageview,
    article_like,article_summary,article_content
    <include refid="Blob_Column_List" />
    from t_article
    where user_id = #{Id} and article_state = 1
  </select>

  <!-- 显示文章列表 -->
  <select id="selectArticleList" resultMap="queryUserName">
        SELECT article_id,article_title,article_state,article_photo, t.`type_name`, u.`user_nickName`,article_time, article_pageview,
                article_like,article_summary,article_content,u.user_head
        FROM t_article AS a,t_user AS u,t_type AS t
        WHERE a.`article_state` = 1 AND a.`user_id`=u.`user_id` AND a.`type_id`=t.`type_id`
        ORDER BY article_time DESC
    </select>

  <!-- 根据文章id进行删除 -->
  <update id="delArticleById">
    update t_article
    set
      article_state = 0
    where article_id = #{id}
  </update>

  <!-- 显示推荐的文章列表 -->
  <select id="selectRecommendArticleList" resultMap="queryUserName">
        SELECT article_id,article_title,article_state,article_photo, t.`type_name`, u.`user_nickName`,article_time, article_pageview,
                article_like,article_summary,article_content,u.user_head
        FROM t_article AS a,t_user AS u,t_type AS t
        WHERE a.`article_state` = 1 AND a.`user_id`=u.`user_id` AND a.`type_id`=t.`type_id`
        ORDER BY article_like DESC,article_pageview DESC
        LIMIT 10
  </select>

  <!-- 根据用户查看的文章增加浏览量 -->
  <select id="updateArticlePageView" resultType="java.lang.Integer">
    UPDATE t_article
    SET article_pageview = article_pageview + 1
    WHERE article_id = #{articleId}
  </select>

  <!-- 根据文章Id改变文章的点赞量 -->
  <update id="updateArticleLikeById">
    UPDATE t_article
    SET article_like = #{count}
    WHERE article_id = #{articleId}
  </update>

  <!-- 根据类型Id显示文章列表 -->
  <select id="selectArticleListByTypeId" resultMap="queryUserName">
        SELECT article_id,article_title,article_state,article_photo, t.`type_name`, u.`user_nickName`,article_time, article_pageview,
                article_like,article_summary,article_content,u.user_head
        FROM t_article AS a,t_user AS u,t_type AS t
        WHERE a.`article_state` = 1 AND a.`user_id`=u.`user_id` AND a.`type_id`=t.`type_id` AND t.`type_id` = #{typeId}
        ORDER BY article_time DESC
    </select>
  <!--分页显示数据-->
  <select id="selectListLimit" resultMap="queryUserName">
        SELECT article_id,article_title,article_state,article_photo, t.`type_name`, u.`user_nickName`,article_time, article_pageview,
                article_like,article_summary,article_content,u.user_head
        FROM t_article AS a,t_user AS u,t_type AS t
        WHERE a.`article_state` = 1 AND a.`user_id`=u.`user_id` AND a.`type_id`=t.`type_id`
        ORDER BY article_time DESC
        LIMIT #{page},#{limit}
  </select>
  <!--查询文章总记录数-->
  <select id="selectCount" resultType="java.lang.Integer">
    SELECT COUNT(article_id)
    FROM t_article
  </select>
</mapper>